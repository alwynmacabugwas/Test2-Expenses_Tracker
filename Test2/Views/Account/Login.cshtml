@using Test2.ViewModels;
@model LoginViewModel;

@{
	ViewData["Title"] = "Login";
	Layout = "~/Views/Shared/_AccountLayout.cshtml";
}

<h1>Login</h1>
<div class="account-container">
	<div classrc="account-box">
		<h2 class="text-center mb-4">Login</h2>
		<form asp-action="Login" method="post" onsubmit="saveEmail()">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="mb-3">
				<label asp-for="Email" class="form-label"></label>
				<input asp-for="Email" class="form-control" id="Email"/>
				<span asp-validation-for="Email" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Password" class="form-label"></label>
				<input asp-for="Password" type="password" class="form-control" />
				<span asp-validation-for="Password" class="text-danger"></span>
			</div>
			<div class="form-check mb-3">
				<label class="form-check-label"></label>
					<input asp-for="RememberMe" class="form-check-input"/>
					@Html.DisplayNameFor(a => a.RememberMe)
			</div>
			<input type="submit" value="Login" class="btn btn-primary" />
		</form>
	</div>
</div>

@section Scripts{
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
<script>
	function saveEmail()
	{
		localStorage.setItem("email", document.getElementById("Email").value);
	}
</script>